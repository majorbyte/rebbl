extends .\coach.pug

block scripts
  - if (process.env.NODE_ENV === 'production')
    script(src="https://cdn2.rebbl.net/scripts/knockout-3.4.2.js")
    script(src="https://cdn2.rebbl.net/scripts/knockout-mapping.min.js")
    script(src="https://cdn2.rebbl.net/scripts/knockout-es5.js")
  - else
    script(src="/scripts/knockout-3.4.2.js")
    script(src="/scripts/knockout-mapping.min.js")
    script(src="/scripts/knockout-es5.js")

  script.
    async function loadHistory(){
      let result = await fetch("/api/v2/standings/coach/!{id}");
      
      if (result.ok){
        let data = await result.json();
        model.standings = data.sort((a,b) => {
          if (!a.season) return 1;
          if (!b.season) return -1;

          if (Number(a.season.replace(/season /i,'')) > Number(b.season.replace(/season /i,''))) return 1; 
          if (Number(a.season.replace(/season /i,'')) < Number(b.season.replace(/season /i,''))) return -1;

          if (a.league > b.league) return -1;
          if (a.league < b.league) return 1;         
          
          return 0;

          });
      }
    }

    async function loadFollowing(){
      let result = await fetch("/api/v2/account/following/!{id}");
      
      if (result.ok){
        let data = await result.json();
        model.following = data;
      }
    }

    class Model{
      constructor(data){
        this.map(data);
        ko.track(this);
      }
      map(data){
        if(data){
          this.standings = null;
          this.followers = 0;
          this.following = null;
        };
      }
      async loadFollowers(){
        let result = await fetch("/api/v2/account/followers/!{id}");
      
        if (result.ok){
          let data = await result.json();
          model.followers = data;
        }
      }
      async follow(){
        let result = await fetch("/api/v2/account/follow/!{id}",{method:"PUT"});
      
        if (result.ok){
          let data = await result.json();
          model.following = data;
        }
      }
      async unfollow(){
        let result = await fetch("/api/v2/account/unfollow/!{id}",{method:"PUT"});
      
        if (result.ok){
          let data = await result.json();
          model.following = data;
        }
      }
    }

    let model = new Model({});
    ko.applyBindings(model);
    $(document).ready(async function(){

      $("#copy").click(function(){
        var copyText = document.getElementById("reddit");
        $("#reddit").prop('disabled',false);
        /* Select the text field */
        copyText.select();

        /* Copy the text inside the text field */
        document.execCommand("copy");
        $("#reddit").prop('disabled',true);

      });

      loadHistory();
      loadFollowing();
      model.loadFollowers();
    });

block content
  div(class="container")
    div(class="row")
      div(class="col-lg-3")
        h1(class="highlight")= coachDetails ? coachDetails.coach : name

        - if(coachDetails && coachDetails.roles && coachDetails.roles.indexOf("admin")>-1)
          img.text-left.mx-1(style="float:left" src="https://cdn2.rebbl.net/images/skills/StaffMember.png" title="Admin")
        - if(coachDetails && coachDetails.roles && coachDetails.roles.indexOf("clanleader")>-1)
          img.text-left.mx-1(style="float:left" src="https://cdn2.rebbl.net/images/skills/CoachSkill.png" title="Clan Leader")
          - if(coachDetails && coachDetails.twitch)
            div
              a(href=coachDetails.twitch target="_blank")
                img.text-left.mx-1(src="https://cdn2.rebbl.net/images/glitch.png" style="height:64px", title=coachDetails.twitch)
        .row
          .col-12
            h3 Contact Data
            div
              label(for="coach") Blood Bowl 2 coach name
              input(type="text" id="coach" name="coach" value=(coachDetails ? coachDetails.coach : name)  disabled)
            - if(coachDetails)  
              div
                label(for="coach") Reddit
                input(type="text" id="reddit" name="coach" value="/u/" + coachDetails.reddit.toLowerCase()  disabled)
                span(id="copy" title="copy to clipboard" style="cursor:pointer")= 'ðŸ“‹'
              div
                label(for="timezone") Timezone
                input(id="timezone" name="timezone" disabled title="timezone" value=coachDetails.timezone)
                label(id="tz_info")
              div
                label(for="discord") Discord
                input(type="text" id="discord" name="discord" value=coachDetails.discord  disabled)
              div
                label(for="steam") Steam
                input(type="text" id="steam" name="steam" value=coachDetails.steam disabled)
              br
        //ko if: followers > 1
        h3(data-bind="text:`${followers} Followers`")
        // /ko
        //ko if: followers === 1
        h3(data-bind="text:`1 Follower`")
        // /ko
        //ko if: following === null
        i(class="fa fa-spinner fa-spin" style="font-size:22px;color: #e67b00;")
        // /ko
        //ko if: following === false
        img(src="https://cdn2.rebbl.net/images/small-fist-gray.png" data-bind="click:follow" style="cursor:pointer" title="Click to follow")
        // /ko
        //ko if: following 
        img(src="https://cdn2.rebbl.net/images/small-fist.png" data-bind="click:unfollow" style="cursor:pointer" title="Following, click to unfollow")
        // /ko

      div(class="col-12 col-lg-9")
        div(class="col col-12")
          h1(class="highlight") History
          //ko if: standings === null
          i(class="fa fa-spinner fa-spin" style="font-size:22px;color: #e67b00;")
          // /ko
          table(class="table table-striped")
            thead(class="headerText")
              tr
                th(scope="col") #
                th(scope="col") League
                th(scope="col") Competition
                th(scope="col") Team
            tbody
              // ko foreach: (standings !== null ? standings.filter(x => x.position) : [])
              tr
                td(data-bind="text:position")
                td(data-bind="text:league")
                td(data-bind="text:competition, title:season")
                td
                  a(data-bind="text:team,attr:{href:`/team/${teamId}`}")
              // /ko       