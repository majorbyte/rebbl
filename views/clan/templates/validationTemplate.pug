
.container
  // ko if: noErrors()
  p No errors detected
  button.btn.btn-sm.btn-success(data-bind="click:$root.closeValidation.bind($root)") close
  // /ko 

  // ko if: !noErrors()
  button.btn.btn-sm.pull-right.btn-primary(data-bind="click:$root.closeValidation.bind($root)") close
  ul.nav.nav-pills(role="tablist")
    // ko if: sppTradeErrors.length > 0
    li.nav-item
      a.nav-link#nav-SppTradeErrors-tab(data-bs-toggle="tab" href="#nav-SppTradeErrors" role="tab" aria-controls="nav-SppTradeErrors") SPP Trade Issues
    // /ko

    // ko if: sppTradeSkillErrors.length > 0
    li.nav-item 
      a.nav-link#nav-SppTradeSkillErrors-tab(data-bs-toggle="tab" href="#nav-SppTradeSkillErrors" role="tab" aria-controls="nav-SppTradeSkillErrors") SPP Trade Skill Issues
    // /ko
    // ko if: sppTradeAccounting.length > 0
    li.nav-item 
      a.nav-link#nav-SppTradeAccounting-tab(data-bs-toggle="tab" href="#nav-SppTradeAccounting" role="tab" aria-controls="nav-SppTradeAccounting") Spp Trade Accounting Issues
    // /ko
    // ko if: incompleteTeamErrors.length > 0
    li.nav-item 
      a.nav-link#nav-IncompleteTeamErrors-tab(data-bs-toggle="tab" href="#nav-IncompleteTeamErrors" role="tab" aria-controls="nav-IncompleteTeamErrors") Incomplete Team Issues
    // /ko
    // ko if: freshTeamErrors.length > 0
    li.nav-item 
      a.nav-link#nav-FreshTeamErrors-tab(data-bs-toggle="tab" href="#nav-FreshTeamErrors" role="tab" aria-controls="nav-FreshTeamErrors") Fresh Team Issues
    // /ko
    // ko if: returningTeamErros.length > 0
    li.nav-item 
      a.nav-link#nav-ReturningTeamErros-tab(data-bs-toggle="tab" href="#nav-ReturningTeamErros" role="tab" aria-controls="nav-ReturningTeamErros") Returning Team Issues
    // /ko
    // ko if: clanErrors.length > 0
    li.nav-item 
      a.nav-link#nav-ClanErrors-tab(data-bs-toggle="tab" href="#nav-ClanErrors" role="tab" aria-controls="nav-ClanErrors") Clan Issues
    // /ko
    // ko if: teamErrors.length > 0
    li.nav-item 
      a.nav-link#nav-TeamErrors-tab(data-bs-toggle="tab" href="#nav-TeamErrors" role="tab" aria-controls="nav-TeamErrors") Team Issues
    // /ko
    // ko if: cheatingErrors.length > 0
    li.nav-item 
      a.nav-link#nav-CheatingErrors-tab(data-bs-toggle="tab" href="#nav-CheatingErrors" role="tab" aria-controls="nav-CheatingErrors") Cheating Issues
    // /ko
    // ko if: ex
    li.nav-item 
      a.nav-link#nav-ExceptionErrors-tab(data-bs-toggle="tab" href="#nav-ExceptionErrors" role="tab" aria-controls="nav-ExceptionErrors") Exceptions
    // /ko


  .tab-content#nav-tabContent
    .tab-pane.fade.show#nav-SppTradeErrors(role="tabpanel" aria-labelledby="nav-SppTradeErrors-tab")
      table.table-striped
        tbody(data-bind="foreach:sppTradeErrors")
          tr 
            td(data-bind="text:$data")

    .tab-pane.fade.show#nav-SppTradeSkillErrors(role="tabpanel" aria-labelledby="nav-SppTradeSkillErrors-tab")
      table.table-striped
        tbody(data-bind="foreach:sppTradeSkillErrors")
          tr 
            td(data-bind="text:$data")

    .tab-pane.fade.show#nav-SppTradeAccounting(role="tabpanel" aria-labelledby="nav-SppTradeAccounting-tab")
      table.table-striped
        tbody(data-bind="foreach:sppTradeAccounting")
          tr 
            td(data-bind="text:$data")
    
    .tab-pane.fade.show#nav-IncompleteTeamErrors(role="tabpanel" aria-labelledby="nav-IncompleteTeamErrors-tab")
      table.table-striped
        tbody(data-bind="foreach:incompleteTeamErrors")
          tr 
            td(data-bind="text:$data")

    .tab-pane.fade.show#nav-FreshTeamErrors(role="tabpanel" aria-labelledby="nav-FreshTeamErrors-tab")
      table.table-striped
        thead 
          th.table-info rule
          th.table-info message
        tbody(data-bind="foreach:freshTeamErrors")
          tr 
            td(data-bind="text:$data.split(':')[0]")
            td(data-bind="text:$data.split(':')[1]")

    .tab-pane.fade.show#nav-ReturningTeamErros(role="tabpanel" aria-labelledby="nav-ReturningTeamErros-tab")
      table.table-striped
        thead 
          th.table-info rule
          th.table-info message
        tbody(data-bind="foreach:returningTeamErros")
          tr 
            td(data-bind="text:$data.split(':')[0]")
            td(data-bind="text:$data.split(':')[1]")

    .tab-pane.fade.show#nav-ClanErrors(role="tabpanel" aria-labelledby="nav-ClanErrors-tab")
      table.table-striped
        tbody(data-bind="foreach:clanErrors")
          tr 
            td(data-bind="text:$data")

    .tab-pane.fade.show#nav-CheatingErrors(role="tabpanel" aria-labelledby="nav-CheatingErrors-tab")
      table.table-striped
        tbody(data-bind="foreach:cheatingErrors")
          tr 
            td(data-bind="text:$data")

    .tab-pane.fade.show#nav-TeamErrors(role="tabpanel" aria-labelledby="nav-TeamErrors-tab")
      table.table-striped
        thead 
          th.table-info team
          th.table-info message
        tbody
          // ko foreach: {data:teamErrors, as:'team'}
          // ko foreach: {data:messages, as:'msg'}
          tr 
            td(data-bind="text:team.team")
            // ko if: msg.startsWith('Could not find player')
            td  
              span Could not find player&nbsp;
                kbd(data-bind="text:msg.replace('Could not find player ','').replace(' on the BB2 team','')")
              span &nbsp;on the BB2 team  
            // /ko
            // ko if: msg.indexOf(' can not be found on the ledger') > -1
            td  
              span Player&nbsp;
                kbd(data-bind="text:msg.replace(' can not be found on the ledger','').replace('Player ','')")
              span &nbsp;can not be found on the ledger
            // /ko
            // ko ifnot: msg.startsWith('Could not find player') || msg.indexOf(' can not be found on the ledger') > -1
            td(data-bind="text:msg")
            // /ko
          // /ko
          // /ko

    .tab-pane.fade.show#nav-ExceptionErrors(role="tabpanel" aria-labelledby="nav-ExceptionErrors-tab")
      p An unexpected error occurred while validating the clan, please let majorbyte know the following: 
      p(data-bind="text: ex")


  // /ko